(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["imagePreview"] = factory();
	else
		root["imagePreview"] = factory();
})(window, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 1);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),
/* 1 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);

// EXTERNAL MODULE: ./src/style/style.scss
var style = __webpack_require__(0);

// CONCATENATED MODULE: ./src/util/index.js
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

/**
 * check if target is function
 * @param {Any} target 
 */
var isFunction = function isFunction(target) {
  return typeof target === 'function';
};
/**
 * check if target is number
 * @param {Any} target 
 */


var isNumber = function isNumber(target) {
  return typeof target === 'number' && target !== NaN;
};
/**
 * check if target is object
 * @param {object} target 
 */


var isObject = function isObject(target) {
  return _typeof(target) === 'object' && target !== null;
};
/**
 * check if target is empty
 * @param {Any} target 
 */


var isEmpty = function isEmpty(target) {
  return [Object, Array].indexOf((typeof target == 'number' ? target : target || {}).constructor) > -1 && !Object.keys(target || {}).length;
};
/**
 * iterate object
 * @param {object array array-like} target 
 * @param {function} cb 
 * @param {number} startIndex 
 */


var forEach = function forEach(target, cb, startIndex) {
  if (target && isFunction(cb)) {
    if (Array.isArray(target) || target.length) {
      var len = target.length;
      startIndex = startIndex || 0;

      for (var i = startIndex; i < len; i++) {
        if (cb.call(target, target[i], i, target) === false) {
          break;
        }
      }
    } else if (isObject(target)) {
      Object.keys(target).forEach(function (k) {
        cb.call(target, k, target[k], target);
      });
    }
  }
};
/**
 * assign object
 */


var util_assign = function assign() {
  var result = arguments[0];
  forEach(arguments, function (object) {
    Object.keys(object).forEach(function (key) {
      result[key] = object[key];
    });
  }, 1);
  return result;
};
/**
 * bind context into taget
 * @param {function} target
 * @param {object} context 
 */


var bind = function bind(target, context) {
  return function wrap() {
    return target.apply(context, arguments);
  };
};

/* harmony default export */ var util = ({
  isEmpty: isEmpty,
  isNumber: isNumber,
  isFunction: isFunction,
  forEach: forEach,
  assign: util_assign,
  bind: bind
});
// CONCATENATED MODULE: ./src/core/hook.js
/* harmony default export */ var hook = ({
  onShow: function onShow() {
    return this;
  },
  onChange: function onChange() {
    return this;
  },
  onClose: function onClose() {
    return this;
  }
});
// CONCATENATED MODULE: ./src/util/dom.js

/**
 * get element
 * @param {String} selector 
 */

var dom = function dom(selector) {
  return selector.indexOf('#') == 0 ? document.getElementById(selector.slice(1)) : document.querySelector(selector);
};

/* harmony default export */ var util_dom = (dom);
/**
 * create an element
 * @param {String} tagName
 * @param {object} attrs 
 * @param {String} inner 
 */

var createEl = function createEl(tagName, attrs, inner) {
  var el = document.createElement(tagName);
  Object.keys(attrs).forEach(function (k) {
    el[k] = attrs[k];
  });
  el.innerHTML = inner;
  return el;
};
/**
 * add className to element
 * @param {element} el
 * @param {String} className 
 */

var dom_addClass = function addClass(el, className) {
  if (el.length) {
    util.forEach(el, function (element) {
      addClass(element, className);
    });
    return el;
  }

  el.classList.add(className);
  return el;
};
/**
 * remove className from element
 * @param {element} el
 * @param {String} className 
 */

var dom_removeClass = function removeClass(el, className) {
  if (el.length) {
    util.forEach(el, function (element) {
      removeClass(element, className);
    });
    return el;
  }

  el.classList.remove(className);
  return el;
};
/**
 * toggle className
 * @param {Element} el 
 * @param {String} className 
 * @param {Boolean} status?
 */

var toggleClass = function toggleClass(el, className, status) {
  if (typeof status === 'undefined') {
    status = !el.classList.contains(className);
  }

  status ? dom_addClass(el, className) : dom_removeClass(el, className);
};
/**
 * listen event on target element(s)
 * @param {element} target
 * @param {String} type
 * @param {function} callback
 */

var listen = function listen(target, type, callback) {
  if (target.length) {
    Array.prototype.forEach.call(target, function (item) {
      item.addEventListener(type, callback);
    });
    return {
      destory: function destory() {
        Array.prototype.forEach.call(target, function (item) {
          item.removeEventListener(type, callback);
        });
      }
    };
  } else {
    target.addEventListener(type, callback);
    return {
      destory: function destory() {
        target.removeEventListener(type, callback);
      }
    };
  }
};
// CONCATENATED MODULE: ./src/core/handler.js
function handler_typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { handler_typeof = function _typeof(obj) { return typeof obj; }; } else { handler_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return handler_typeof(obj); }




var handler_mergeOptions = function mergeOptions(defaults, option) {
  var curOption = {};

  if (typeof option === 'string') {
    curOption.list = [{
      url: option
    }];
  } else if (option instanceof Array) {
    curOption.list = option;
  } else if (handler_typeof(option) === 'object' && option !== null) {
    curOption = option;
  }

  return util.assign({}, defaults, curOption);
};

/* harmony default export */ var handler = ({
  show: function show(option) {
    if (this.showing) return;

    if (!this.mounted || !util_dom("#".concat(this.id))) {
      this._mount();
    }

    var currentOption = handler_mergeOptions(this.setting, option);
    if (util.isEmpty(currentOption.list)) return;
    this.list = currentOption.list || [];
    this.currentIndex = currentOption.index || 0;

    this._loadImg();

    this.showing = true;
    return this;
  },
  close: function close() {
    this.showing = false;
    this.loading = false;
    return this;
  },
  prev: function prev() {
    console.log(this.showing);
    this.currentIndex = this.setting.loop ? this.currentIndex === 0 ? this.list.length - 1 : this.currentIndex - 1 : Math.max(this.currentIndex, 0);

    this._loadImg();
  },
  next: function next() {
    this.currentIndex = this.setting.loop ? (this.currentIndex + 1) % this.list.length : Math.min(this.currentIndex, this.list.length);

    this._loadImg();
  },
  _loadImg: function _loadImg() {
    console.log(this.loading);
    this.loading = true;
    console.log(this.loading);
    this.imgElement.src = (this.list[this.currentIndex] || {}).url;
  }
});
// CONCATENATED MODULE: ./src/core/event.js


/* harmony default export */ var core_event = ({
  _initEvent: function _initEvent() {
    var _this = this;

    var listener = {};
    listener.prevButton = listen(this.toolbar.querySelector('li[data-action=left]'), 'click', util.bind(this.prev, this));
    listener.prevButton = listen(this.toolbar.querySelector('li[data-action=right]'), 'click', util.bind(this.next, this));
    listener.closeButton = listen(this.corner, 'click', util.bind(this.close, this));
    listener.loadImg = listen(this.board.querySelector('img'), 'load', function (e) {
      console.log(e.target);
      var img = e.target;
      console.log(img.width);
      console.log(img.height);
      _this.loading = false;
    });
    this.listener = listener;
  }
});
// CONCATENATED MODULE: ./src/core/defaults.js
var noop = function noop() {};

var genLabel = function genLabel(data) {
  return data.name;
};

/* harmony default export */ var core_defaults = ({
  mount: document.body,
  loop: true,
  label: genLabel,
  showLabel: false,
  showToolBar: true,
  showToolBarAnimation: false,
  lockScroll: true,
  onShow: noop,
  onChange: noop,
  onClose: noop
});
// CONCATENATED MODULE: ./src/util/constants.js
var NAMESPACE = 'easy-previewer';
var CLASS_NAME_VISIBLE = "".concat(NAMESPACE, "--visible");
var CLASS_NAME_HIDE = "".concat(NAMESPACE, "--hide");
var CLASS_NAME_LOADING = "".concat(NAMESPACE, "--loading");
var CLASS_NAME_CORNER = "".concat(NAMESPACE, "__corner");
var CLASS_NAME_INDICATOR = "".concat(NAMESPACE, "__indicator");
var CLASS_NAME_BOARD = "".concat(NAMESPACE, "__board");
var CLASS_NAME_FOOTER = "".concat(NAMESPACE, "__footer");
var CLASS_NAME_BTN_CLOSE = "".concat(NAMESPACE, "__btn-close");
var CLASS_NAME_TOOLBAR = "".concat(NAMESPACE, "__toolbar");
var TEMPLATE = "\n  <div class=\"".concat(CLASS_NAME_CORNER, "\">\n    <span class=\"").concat(CLASS_NAME_BTN_CLOSE, "\" role=\"button\">\xD7</span>\n  </div>\n  <div class=\"").concat(CLASS_NAME_INDICATOR, "\"></div>\n  <div class=\"").concat(CLASS_NAME_BOARD, "\">\n    <img />\n  </div>\n  <div class=\"").concat(CLASS_NAME_FOOTER, "\">\n    <ul class=\"").concat(CLASS_NAME_TOOLBAR, "\">\n      <li data-action=\"left\" class=\"easy-previewer__tool-item\">\u2190</li>\n      <li data-action=\"right\" class=\"easy-previewer__tool-item\">\u2192</li>\n    </ul>\n  </div>\n");
// CONCATENATED MODULE: ./src/core/Previewer.js
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }








var id = 1;

var Previewer_Previewer = /*#__PURE__*/function () {
  function Previewer(config) {
    _classCallCheck(this, Previewer);

    this.id = "__".concat(NAMESPACE).concat(id++);
    this.mounted = false;
    this.currentIndex = 0;
    this.list = [];
    this.setting = util.assign(core_defaults, config || {});

    this._initWatcher();
  }

  _createClass(Previewer, [{
    key: "_mount",
    value: function _mount() {
      var previewer = document.createElement('div');
      previewer.id = this.id;
      previewer.innerHTML = TEMPLATE;
      dom_addClass(previewer, "".concat(NAMESPACE));
      dom_addClass(previewer, "".concat(CLASS_NAME_VISIBLE));
      this.root = previewer;
      this.corner = previewer.querySelector(".".concat(CLASS_NAME_CORNER));
      this.indicator = previewer.querySelector(".".concat(CLASS_NAME_INDICATOR));
      this.board = previewer.querySelector(".".concat(CLASS_NAME_BOARD));
      this.imgElement = this.board.querySelector('img');
      this.footer = previewer.querySelector(".".concat(CLASS_NAME_FOOTER));
      this.toolbar = previewer.querySelector(".".concat(CLASS_NAME_TOOLBAR));
      /**
       * mount dom into view
       */

      var settingMount = this.setting.mount;

      if (typeof settingMount === 'string') {
        this.setting.mount = util_dom(settingMount);
      }

      this.setting.mount.appendChild(previewer);
      this.mounted = true;

      this._initEvent(); // this.loading = true

    }
  }, {
    key: "_initWatcher",
    value: function _initWatcher() {
      var _this = this;

      var state = {
        showing: false,
        loading: false
      };
      var triggerMap = {
        showing: function showing(status) {
          toggleClass(this.root, CLASS_NAME_HIDE, !status);
          toggleClass(this.root, CLASS_NAME_VISIBLE, status);
        },
        loading: function loading(status) {
          toggleClass(this.root, CLASS_NAME_LOADING, status);
        }
      };
      Object.keys(triggerMap).forEach(function (attr) {
        var val = state[attr];
        Object.defineProperty(state, attr, {
          configurable: true,
          enumerable: true,
          get: function get() {
            return val;
          },
          set: function set(val) {
            triggerMap[attr].call(this, val);
          }
        }); // proxy

        _this[attr] = state[attr];
      });
    }
  }]);

  return Previewer;
}();

util.assign(Previewer_Previewer.prototype, hook, core_event, handler);
/* harmony default export */ var core_Previewer = (Previewer_Previewer);
// CONCATENATED MODULE: ./src/previewer.js



function createInstance(config) {
  var context = new core_Previewer(config);
  var instance = util.bind(core_Previewer.prototype.show, context);
  return instance;
}

var previewer_previewer = createInstance({});
previewer_previewer.create = createInstance;
/* harmony default export */ var src_previewer = (previewer_previewer);
// CONCATENATED MODULE: ./index.js
/* concated harmony reexport default */__webpack_require__.d(__webpack_exports__, "default", function() { return src_previewer; });



/***/ })
/******/ ]);
});